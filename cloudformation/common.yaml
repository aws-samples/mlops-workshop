AWSTemplateFormatVersion: "2010-09-09"

Transform: AWS::Serverless-2016-10-31

Description: "Create repositories required for the workshop"

Parameters:
  PublicResourcesBucket:
    Type: String
    Description: The bucket containing public resources for this workshop
    Default: mlops-public-resources
  PublicResourcesPrefix:
    Type: String
    Description: Prefix for public assets
    Default: modules/003e4525f16a42ada5b3ff651c932370/v1/

Resources:
  DataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub data-${AWS::Region}-${AWS::AccountId}
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  MLOpsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub mlops-${AWS::Region}-${AWS::AccountId}
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  MlopsRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: "Repository for the ML models and pipeline code"
      RepositoryName: mlops
#      Code:
#        BranchName: main
#        S3:
#          Bucket: !Ref PublicResourcesBucket
#          Key: !Sub ${PublicResourcesPrefix}model-source.zip
  AbaloneContainerRegistry:
    Type: AWS::ECR::Repository
    Properties:
      EncryptionConfiguration:
        EncryptionType: AES256
      RepositoryName: abalone
  AbaloneLambdaRegistry:
    Type: AWS::ECR::Repository
    Properties:
      EncryptionConfiguration:
        EncryptionType: AES256
      RepositoryName: abalone-lambda
#  AbaloneData:
#    Type: Custom::S3CustomResource
#    DependsOn: DataBucket
#    Properties:
#      ServiceToken: !GetAtt ResourceStagingFunction.Arn
#      SourceBucket: !Ref PublicResourcesBucket
#      TargetBucket: !Ref DataBucket
#      SourceKey: !Sub "${PublicResourcesPrefix}data/input/raw/abalone.csv"
#      TargetKey: "input/raw/abalone.csv"
#  PreprocessingScript:
#    Type: Custom::S3CustomResource
#    DependsOn: MLOpsBucket
#    Properties:
#      ServiceToken: !GetAtt ResourceStagingFunction.Arn
#      SourceBucket: !Ref PublicResourcesBucket
#      TargetBucket: !Ref MLOpsBucket
#      SourceKey: !Sub "${PublicResourcesPrefix}etl/preprocess.py"
#      TargetKey: "code/preprocess.py"

Outputs:
  DataBucket:
    Description: Name of data bucket
    Value: !Ref DataBucket
    Export:
      Name: DataBucket
  MLOpsBucket:
    Description: Name of mlops bucket
    Value: !Ref MLOpsBucket
    Export:
      Name: MLOpsBucket
  MLOpsRepoName:
    Description: Name of mlops codecommit repository
    Value: !GetAtt MlopsRepository.Name
    Export:
      Name: MLOpsRepoName
  MLOpsRepoArn:
    Description: Arn of mlops codecommit repository
    Value: !GetAtt MlopsRepository.Arn
    Export:
      Name: MLOpsRepoArn
  ContainerRegistryArn:
    Description: Arn of abalone container registry
    Value: !GetAtt AbaloneContainerRegistry.Arn
    Export:
      Name: ContainerRegistryArn
  ContainerRegistryURI:
    Description: Uri of Container Registry
    Value: !GetAtt AbaloneContainerRegistry.RepositoryUri
    Export:
      Name: ContainerRegistryURI
  ContainerRegistryName:
    Description: Name of abalone container registry
    Value: !Ref AbaloneContainerRegistry
    Export:
      Name: ContainerRegistryName
  AbaloneLambdaRegistryArn:
    Description: Arn of abalone container registry for lambda images
    Value: !GetAtt AbaloneLambdaRegistry.Arn
    Export:
      Name: AbaloneLambdaRegistryArn
  AbaloneLambdaRegistryURI:
    Description: Uri of abalone container registry for lambda images
    Value: !GetAtt AbaloneLambdaRegistry.RepositoryUri
    Export:
      Name: AbaloneLambdaRegistryURI
  AbaloneLambdaRegistryName:
    Description: Name of abalone container registry for lambda images
    Value: !Ref AbaloneLambdaRegistry
    Export:
      Name: AbaloneLambdaRegistryName
#  ResourceStagingFunctionArn:
#    Description: Arn of Lambda for custom resource that stages objects to s3 bucket
#    Value: !GetAtt ResourceStagingFunction.Arn
#    Export:
#      Name: ResourceStagingFunctionArn
#  ResourceStagingFunctionName:
#    Description: Name of Lambda for custom resource that stages objects to s3 bucket
#    Value: !Ref ResourceStagingFunction
#    Export:
#      Name: ResourceStagingFunctionName



